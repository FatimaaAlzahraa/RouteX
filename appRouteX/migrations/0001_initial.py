# Generated by Django 5.2.6 on 2025-09-21 13:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('shipment_details', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('role', models.CharField(choices=[('DRIVER', 'Driver'), ('WAREHOUSE_MANAGER', 'Warehouse manager')], db_index=True, max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=255)),
            ],
            options={
                'indexes': [models.Index(fields=['name'], name='appRouteX_c_name_2a65c8_idx'), models.Index(fields=['phone'], name='appRouteX_c_phone_7cd952_idx')],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'DRIVER'}, on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('current_status', models.CharField(choices=[('ASSIGNED', 'Assigned'), ('PICKED_UP', 'Picked up'), ('IN_TRANSIT', 'In transit'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled')], db_index=True, default='ASSIGNED', editable=False, max_length=20)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='appRouteX.customer')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='appRouteX.driver')),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='appRouteX.shipment')),
                ('warehouse', models.ForeignKey(help_text='المكان/الفرع الذي ينطلق منه السائق أو يستلم منه.', on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='appRouteX.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='StatusUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ASSIGNED', 'Assigned'), ('PICKED_UP', 'Picked up'), ('IN_TRANSIT', 'In transit'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled')], db_index=True, max_length=20)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('note', models.TextField(blank=True)),
                ('attachment_url', models.URLField(blank=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_updates', to='appRouteX.assignment')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='shipment',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shipments', to='appRouteX.warehouse'),
        ),
        migrations.CreateModel(
            name='WarehouseManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(limit_choices_to={'role': 'WAREHOUSE_MANAGER'}, on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_manager_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='warehouse',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='warehouses', to='appRouteX.warehousemanager'),
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['is_active'], name='appRouteX_d_is_acti_8342d0_idx'),
        ),
        migrations.AddIndex(
            model_name='statusupdate',
            index=models.Index(fields=['status', 'timestamp'], name='appRouteX_s_status_6a14c0_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['assigned_at'], name='appRouteX_a_assigne_7ed84a_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['driver'], name='appRouteX_a_driver__69f06e_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['customer'], name='appRouteX_a_custome_ad5479_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['warehouse'], name='appRouteX_a_warehou_5b12bd_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['current_status'], name='appRouteX_a_current_3df978_idx'),
        ),
        migrations.AddConstraint(
            model_name='assignment',
            constraint=models.UniqueConstraint(fields=('shipment', 'driver'), name='uniq_assignment_per_shipment_driver'),
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['name'], name='appRouteX_w_name_1312dd_idx'),
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['location'], name='appRouteX_w_locatio_0ece07_idx'),
        ),
    ]
